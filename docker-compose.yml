services:
  mysql:
    image: mariadb:10.5
    env_file:
      - .env.local
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./crm_system.sql:/docker-entrypoint-initdb.d/crm_system.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p${DATABASE_PASSWORD}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - app-network

  nextjs:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env.local
    environment:
      - NODE_ENV=production
    deploy:
      resources:
        limits:
          memory: 4G
    volumes:
      - ./public/uploads:/usr/src/public/uploads
      - /usr/src/node_modules
      - /usr/src/.next
    depends_on:
      mysql:
        condition: service_healthy
    restart: always
    networks:
      - app-network
    container_name: nextjs

  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /etc/ssl:/etc/ssl:ro
    depends_on:
      - nextjs
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    env_file:
      - .env.local
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
    depends_on:
      - mysql
    networks:
      - app-network
    restart: always



networks:
  app-network:
    driver: bridge

volumes:
  mysql_data: {}
